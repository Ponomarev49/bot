import telebot
from telebot import types
from decouple import config
import random

BOT_TOKEN = config('BOT_TOKEN', default='')
bot = telebot.TeleBot(BOT_TOKEN)
first_num = {}
second_num = {}
bid = {}
balance = {}


@bot.message_handler(commands=['start'])
def start(message):
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn1 = types.KeyboardButton("üëã –ü—Ä–∏–≤–µ—Ç!")
    markup.add(btn1)
    balance[message.from_user.id] = 1000
    bot.send_message(message.from_user.id, "üëã –ü—Ä–∏–≤–µ—Ç! –Ø –º–æ–≥—É —Ç–µ–±–µ –ø–æ–∫–∞–∑–∞—Ç—å —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—É—é –∏–≥—Ä—É, —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–π —Ç—ã "
                                           "—Å–º–æ–∂–µ—à—å –∑–∞–ø—Ä–æ—Å—Ç–æ —É–±–∏—Ç—å –≤—Ä–µ–º—è.", reply_markup=markup)


@bot.message_handler(content_types=['text'])
def get_text_messages(message):
    global first_num, second_num, balance, bid
    if message.text == 'üëã –ü—Ä–∏–≤–µ—Ç!' or message.text == '–ú–µ–Ω—é':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ò–≥—Ä–∞')
        btn2 = types.KeyboardButton('–û–± –∞–≤—Ç–æ—Ä–µ')
        btn4 = types.KeyboardButton('–í—ã—Ö–æ–¥')
        markup.add(btn1, btn2, btn4)
        bot.send_message(message.from_user.id, '–°–µ–π—á–∞—Å –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.', reply_markup=markup)

    if message.text == 'üëã –ü—Ä–∏–≤–µ—Ç, –Ø —Å–Ω–æ–≤–∞ –∑–¥–µ—Å—å!':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ò–≥—Ä–∞')
        btn2 = types.KeyboardButton('–û–± –∞–≤—Ç–æ—Ä–µ')
        btn4 = types.KeyboardButton('–í—ã—Ö–æ–¥')
        markup.add(btn1, btn2, btn4)
        bot.send_message(message.from_user.id, '–Ø —Ä–∞–¥ —Ç–µ–±—è —Å–Ω–æ–≤–∞ –≤–∏–¥–µ—Ç—å!\n'
                                               '–°–µ–π—á–∞—Å –≤—ã –Ω–∞—Ö–æ–¥–∏—Ç–µ—Å—å –≤ –≥–ª–∞–≤–Ω–æ–º –º–µ–Ω—é.', reply_markup=markup)

    if message.text == '–û–± –∞–≤—Ç–æ—Ä–µ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ú–µ–Ω—é')
        markup.add(btn1)
        bot.send_message(message.from_user.id, '–Ø –æ–∂–∏–ª –±–ª–∞–≥–æ–¥–∞—Ä—è –º–æ–∏–º —Å–æ–∑–¥–∞—Ç–µ–ª—è–º!\n'
                                               '–î–æ–ª–≥–æ –∏ —É–ø–æ—Ä–Ω–æ —Ç—Ä—É–¥–∏–ª–∏—Å—å:\n'
                                               '–°—Ç—É–¥–µ–Ω—Ç—ã –§–ò–¢-221 –ß–µ—Ä–Ω–∏–∫–æ–≤–∞ –ê–ª–µ–Ω–∞ –∏ –ü–æ–Ω–æ–º–∞—Ä–µ–≤ –ú–∏—Ö–∞–∏–ª',
                         reply_markup=markup)

    elif message.text == '–ò–≥—Ä–∞':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ò–≥—Ä–∞–µ–º')
        btn2 = types.KeyboardButton('–ú–µ–Ω—é')
        btn4 = types.KeyboardButton('–û–± –∏–≥—Ä–µ')
        markup.add(btn1, btn4, btn2)
        bot.send_message(message.from_user.id, '–°—ã–≥—Ä–∞–µ–º‚ùì', reply_markup=markup)

    elif message.text == '–ò–≥—Ä–∞–µ–º' or message.text == '–°—ã–≥—Ä–∞—Ç—å –µ—â–µ' or message.text == '–°–¥–µ–ª–∞–Ω–æ!':
        if balance[message.from_user.id] == 0:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('–°–¥–µ–ª–∞–Ω–æ!')
            markup.add(btn1)
            mesg = bot.send_message(message.from_user.id, f'–ù–∞ –≤–∞—à–µ–º —Å—á–µ—Ç—É –Ω–µ—Ç —Å—Ä–µ–¥—Å—Ç–≤!\n–î–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –ø–æ–ø–æ–ª–Ω–∏—Ç—å '
                                                          f'–±–∞–ª–∞–Ω—Å, —Å–¥–µ–ª–∞–π—Ç–µ 10 –æ—Ç–∂–∏–º–∞–Ω–∏–π!',
                                    reply_markup=markup)
            balance[message.from_user.id] += 1000
            bot.register_next_step_handler(mesg, get_text_messages)
        else:
            mesg = bot.send_message(message.from_user.id, f'–í–∞—à –±–∞–ª–∞–Ω—Å - {balance[message.from_user.id]}\n'
                                                          f'–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –≤–∞—à–µ–π —Å—Ç–∞–≤–∫–∏')
            bot.register_next_step_handler(mesg, game)

    elif message.text == '–ë–æ–ª—å—à–µ >':
        if first_num[message.from_user.id] < second_num[message.from_user.id]:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('–°—ã–≥—Ä–∞—Ç—å –µ—â–µ')
            btn2 = types.KeyboardButton('–ú–µ–Ω—é')
            markup.add(btn1, btn2)
            balance[message.from_user.id] += bid[message.from_user.id] * round(
                99 / (99 - first_num[message.from_user.id]),
                2)
            bot.send_message(message.from_user.id,
                             f'–ß–∏—Å–ª–æ 1 - {first_num[message.from_user.id]}\n–ß–∏—Å–ª–æ 2 - '
                             f'{second_num[message.from_user.id]}\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!\n'
                             f'–í–∞—à –±–∞–ª–∞–Ω—Å - {balance[message.from_user.id]}',
                             reply_markup=markup)

        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('–°—ã–≥—Ä–∞—Ç—å –µ—â–µ')
            btn2 = types.KeyboardButton('–ú–µ–Ω—é')
            markup.add(btn1, btn2)
            bot.send_message(message.from_user.id,
                             f'–ß–∏—Å–ª–æ 1 - {first_num[message.from_user.id]}\n–ß–∏—Å–ª–æ 2 - '
                             f'{second_num[message.from_user.id]}\n'
                             f'–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n'
                             f'–í–∞—à –±–∞–ª–∞–Ω—Å - {balance[message.from_user.id]}',
                             reply_markup=markup)

    elif message.text == '–†–∞–≤–Ω–æ =':
        if first_num[message.from_user.id] == second_num[message.from_user.id]:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('–°—ã–≥—Ä–∞—Ç—å –µ—â–µ')
            btn2 = types.KeyboardButton('–ú–µ–Ω—é')
            markup.add(btn1, btn2)
            balance[message.from_user.id] += bid[message.from_user.id] * round(99, 2)
            bot.send_message(message.from_user.id,
                             f'–ß–∏—Å–ª–æ 1 - {first_num[message.from_user.id]}\n–ß–∏—Å–ª–æ 2 - '
                             f'{second_num[message.from_user.id]}\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!\n'
                             f'–í–∞—à –±–∞–ª–∞–Ω—Å - {balance[message.from_user.id]}',
                             reply_markup=markup)

        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('–°—ã–≥—Ä–∞—Ç—å –µ—â–µ')
            btn2 = types.KeyboardButton('–ú–µ–Ω—é')
            markup.add(btn1, btn2)
            bot.send_message(message.from_user.id,
                             f'–ß–∏—Å–ª–æ 1 - {first_num[message.from_user.id]}\n–ß–∏—Å–ª–æ 2 - '
                             f'{second_num[message.from_user.id]}\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n'
                             f'–í–∞—à –±–∞–ª–∞–Ω—Å - {balance[message.from_user.id]}',
                             reply_markup=markup)

    elif message.text == '–ú–µ–Ω—å—à–µ <':
        if first_num[message.from_user.id] > second_num[message.from_user.id]:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('–°—ã–≥—Ä–∞—Ç—å –µ—â–µ')
            btn2 = types.KeyboardButton('–ú–µ–Ω—é')
            markup.add(btn1, btn2)
            balance[message.from_user.id] += bid[message.from_user.id] * round(
                99 / (first_num[message.from_user.id] - 1), 2)
            bot.send_message(message.from_user.id,
                             f'–ß–∏—Å–ª–æ 1 - {first_num[message.from_user.id]}\n–ß–∏—Å–ª–æ 2 - '
                             f'{second_num[message.from_user.id]}\n–í—ã –≤—ã–∏–≥—Ä–∞–ª–∏!\n'
                             f'–í–∞—à –±–∞–ª–∞–Ω—Å - {balance[message.from_user.id]}',
                             reply_markup=markup)

        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('–°—ã–≥—Ä–∞—Ç—å –µ—â–µ')
            btn2 = types.KeyboardButton('–ú–µ–Ω—é')
            markup.add(btn1, btn2)
            bot.send_message(message.from_user.id,
                             f'–ß–∏—Å–ª–æ 1 - {first_num[message.from_user.id]}\n–ß–∏—Å–ª–æ 2 - '
                             f'{second_num[message.from_user.id]}\n–í—ã –ø—Ä–æ–∏–≥—Ä–∞–ª–∏!\n'
                             f'–í–∞—à –±–∞–ª–∞–Ω—Å - {balance[message.from_user.id]}',
                             reply_markup=markup)

    elif message.text == '–û–± –∏–≥—Ä–µ':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton('–ò–≥—Ä–∞–µ–º')
        btn4 = types.KeyboardButton('–ú–µ–Ω—é')
        markup.add(btn1, btn4)
        bot.send_message(message.from_user.id, '–¶–µ–ª—å –∏–≥—Ä—ã —Å–æ—Å—Ç–æ–∏—Ç –≤ —Ç–æ–º, —á—Ç–æ–±—ã —É–≥–∞–¥–∞—Ç—å, –±—É–¥–µ—Ç —Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ '
                                               '–±–æ–ª—å—à–µ–≥–æ, –º–µ–Ω—å—à–µ–≥–æ –∏–ª–∏ —Ä–∞–≤–Ω–æ–≥–æ –¥–æ—Å—Ç–æ–∏–Ω—Å—Ç–≤–∞, —á–µ–º —á–∏—Å–ª–æ, –∫–æ—Ç–æ—Ä–æ–µ —É–∂–µ '
                                               '–¥–∞–Ω–æ.\n'
                                               '–ö–∞–∂–¥—ã–π —Ä–∞–∑ –º—ã —É–º–Ω–æ–∂–∏—Ç—å —Å–≤–æ–π –≤—ã–∏–≥—Ä—ã—à, '
                                               '–µ—Å–ª–∏ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ —É–≥–∞–¥–∞–µ—Ç–µ —Å–ª–µ–¥—É—é—â–µ–µ —á–∏—Å–ª–æ'
                                               '–¶–µ–ª—å —ç—Ç–æ–π –∏–≥—Ä–µ –ø–æ–ª—É—á–∞—Ç—å —É–¥–æ–≤–æ–ª—å—Å—Ç–≤–∏–µ, –ø–æ—Ç–æ–º—É —á—Ç–æ –Ω–∞ –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç '
                                               '–∏–≥—Ä–∞ –Ω–µ —Ä–∞—Å—á–∏—Ç–∞ –Ω–∞ —Ä–µ–∞–ª—å–Ω—ã–µ –¥–µ–Ω–µ–∂–Ω—ã–µ —Å—Ä–µ–¥—Å—Ç–≤–∞'
                                               '–†–∞–∑–≤–ª–µ–∫–∞–π—Ç–µ—Å—å!', reply_markup=markup)

    elif message.text == '–í—ã—Ö–æ–¥':
        markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
        btn1 = types.KeyboardButton("üëã –ü—Ä–∏–≤–µ—Ç, –Ø —Å–Ω–æ–≤–∞ –∑–¥–µ—Å—å!")
        markup.add(btn1)
        bot.send_message(message.from_user.id, '–î–æ –Ω–æ–≤–æ–π –≤—Å—Ç—Ä–µ—á–∏!', reply_markup=markup)


def game(message):
    try:
        global first_num, second_num, balance, bid
        bid[message.from_user.id] = float(message.text)
        if bid[message.from_user.id] <= 0:
            mesg = bot.send_message(message.from_user.id, f'–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥\n'
                                                          f'–í–∞—à –±–∞–ª–∞–Ω—Å - {balance[message.from_user.id]}\n'
                                                          f'–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –≤–∞—à–µ–π —Å—Ç–∞–≤–∫–∏')
            bot.register_next_step_handler(mesg, game)

        elif bid[message.from_user.id] > balance[message.from_user.id]:
            bot.send_message(message.from_user.id, f'–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤')
            mesg = bot.send_message(message.from_user.id, f'\n–í–∞—à –±–∞–ª–∞–Ω—Å - {balance[message.from_user.id]}\n'
                                                          f'–í–≤–µ–¥–∏—Ç–µ —Ä–∞–∑–º–µ—Ä –≤–∞—à–µ–π —Å—Ç–∞–≤–∫–∏')
            bot.register_next_step_handler(mesg, game)

        else:
            markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
            btn1 = types.KeyboardButton('–ë–æ–ª—å—à–µ >')
            btn2 = types.KeyboardButton('–†–∞–≤–Ω–æ =')
            btn3 = types.KeyboardButton('–ú–µ–Ω—å—à–µ <')
            markup.add(btn1, btn2, btn3)
            first_num[message.from_user.id] = random.randint(2, 99)
            second_num[message.from_user.id] = random.randint(1, 99)
            mesg = bot.send_message(message.from_user.id,
                                    f'–°—Ç–∞–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!\n–í–∞—à–∞ —Å—Ç–∞–≤–∫–∞ - {bid[message.from_user.id]}\n–ß–∏—Å–ª–æ '
                                    f'{first_num[message.from_user.id]}\n'
                                    f'–ë–æ–ª—å—à–µ\tx{round(99 / (99 - first_num[message.from_user.id]), 2)}\n'
                                    f'–†–∞–≤–Ω–æ\tx{round(99, 2)}\n'
                                    f'–ú–µ–Ω—å—à–µ\tx{round(99 / (first_num[message.from_user.id] - 1), 2)}\t\n–í–∞—à –≤—ã–±–æ—Ä?',
                                    reply_markup=markup)
            balance[message.from_user.id] -= bid[message.from_user.id]
            bot.register_next_step_handler(mesg, get_text_messages)
    except ValueError:
        mesg = bot.send_message(message.from_user.id, '–ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω—ã–π –≤–≤–æ–¥')
        bot.register_next_step_handler(mesg, game)


bot.polling(none_stop=True, interval=0)
